language: node_js

# Version number
node_js:
  - 0.12
  #- 5.0
  #- 0.11
  #- 0.10
  
#services:
  #- mysql
 # - postgres
  #- redis
  #- memcache
  #- elasticsearch
 # - mongodb
 # - rabbitmq
  #- cassandra
 # - selenium
 
env: 
  global:
    - AWS_S3_BUCKET='s3://push-to-s3'
    - AWS_S3_REGION='us-west-2'
#    - FOO=BOO
  #  - COMMITER=VARSHA
  
build:
 # pre_ci:
  #  - docker build -t=quay.io/revathird/cock1_nod_multipush56 .
    
    
 # pre_ci_boot:
   # image_name: drydock/u14nodall
   # image_tag: master
   # pull: false
  #  options: '--privileged=false --net=bridge -e FOO=true -e BOO=false'

  ci:
    - echo "hello world"
    - docker pull library/busybox:latest
    #- sleep 2m
    #- pip install awsebcli
    #- cs ps

  post_ci:
    #- docker build -t=742038439709.dkr.ecr.us-west-2.amazonaws.com/sample_node:latest2 .
    - docker tag library/busybox:latest  742038439709.dkr.ecr.us-west-2.amazonaws.com/sample_node:latest2
    - docker push 742038439709.dkr.ecr.us-west-2.amazonaws.com/sample_node:latest2
   # - docker build -t=742038439709.dkr.ecr.us-east-1.amazonaws.com/sample_php:latest2 .
    - docker tag library/busybox:latest 742038439709.dkr.ecr.us-east-1.amazonaws.com/sample_php:latest2
    - docker push 742038439709.dkr.ecr.us-east-1.amazonaws.com/sample_php:latest2
    
    #- docker push shippabledocker/sample_node:$BRANCH.$BUILD_NUMBER
    #- docker build -t=shippabledocker/cock1_nod_multipush56:multi123 .    
    #- docker push shippabledocker/cock1_nod_multipush56:multi123
  #  - docker build -t=shippabledocker/cock1_nod_multipush56push .    
   # - docker push shippabledocker/cock1_nod_multipush56push
  
  on_success:
  # Testing to push to s3 bucket
    - aws s3 sync $SHIPPABLE_BUILD_DIR $AWS_S3_BUCKET --region $AWS_S3_REGION

integrations:
  hub:
    - integrationName: ship-docker
      type: docker 

  #ECR integration
    - integrationName: ship-ecrwest2
      type: ecr
      region: us-west-2
      
    - integrationName: ship-ecreast1
      type: ecr
      region: us-east-1
      
  deploy:
    - integrationName: "ship-aws"
      type: aws
      target: eb_paas
      platform: "Node.js"
      application_name: "sample-node-eb-sample-app"
      env_name: "Sample-env-1"
      region: "us-west-2"  
      
    - integrationName: "ship-aws"
      type: aws
      target: eb_docker
      application_name: "sample-node-eb-docker-app"
      env_name: "Sample-env"
      bucket_name: "elasticbeanstalk-us-east-1-742038439709"
      region: "us-west-2"
      image_name: "shippabledocker/pipelinev2"
      image_tag: "$BRANCH.$BUILD_NUMBER"
      
  notifications:
  
  #  - integrationName: proj-sampleNod
    #  type: webhook
    #  payload:
     #   - API_URL=$SHIPPABLE_API_URL
     #   - CONTAINER_NAME=$SHIPPABLE_CONTAINER_NAME
     #   - FOO=bar
     #   - BOO=buzz
    #  on_start: always
    #  on_success: never
     # on_failure: always
      
    - integrationName: email
      type: email
      recipients: 
        - shiphitchcock1@gmail.com
        - shiptest-rc-me@gmail.com
      on_success: always
      on_failure: always
      on_pull_request: always
      on_cancel: always
      
  #  - integrationName: slack
   #   type: slack
   #   recipients:
   #     - "#public-chnl"
   #     - pvt-channel
   #   on_start: always  
   #   on_success: always
   #   on_failure: always
   #   on_pull_request: never
      
    - integrationName: irc
      type: irc
      recipients:
        - "chat.freenode.net#test1"
        - "webchat.irchighway.net#test-rc"
      on_success: always
      on_failure: always
      on_pull_request: always
      on_cancel: always
  
